/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from 'react'
import { useScroll, Scroll, useGLTF, useAnimations, useAspect, Image } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { TextAnimation } from './TextAnimation'

export default function Model(props) {
  const group = useRef()
  const bgRef = useRef()
  const imgRef = useRef()
  const size = useAspect(1800 , 1000)

  // This hook gives you offets, ranges and other useful things
  const scroll = useScroll()
  const { scene, nodes, animations, materials } = useGLTF('/emerald.glb')
  const { actions } = useAnimations(animations, scene)
  
  useFrame((state, delta) => {
    // The offset is between 0 and 1, you can apply it to your models any way you like
    // const offset = 1 - props.offset.position.y
    const offset = 0.1  - props.offset.position.y 

    
    const model = group.current;
    // const bg = bgRef.current;

    model.rotation.y = offset / 3
    model.position.y = offset / props.viewHeight * 4

    
  })

  return (
        <>
        
          <group ref={group} position={props.position} rotation={[0, 2, 0]} scale={props.scale}>
        
            <mesh castShadow receiveShadow geometry={nodes.emeraldbot_1.geometry}  material-color={"#00FFD9"} />
            <mesh castShadow receiveShadow geometry={nodes.emeraldbot_2.geometry} material={materials['flowbot:phong2']} />
            <mesh castShadow receiveShadow geometry={nodes.emeraldbot_3.geometry} material={materials['flowbot:phong3']} />
            <mesh castShadow receiveShadow geometry={nodes.emeraldbot_4.geometry} material-color={"#2FD1B9"} />
          </group>
        </>
  )
}

useGLTF.preload('/emerald.glb')